name: Deploy to Azure App Service

on:
  push:
    branches:
      - main  # Ação será disparada sempre que houver um push na branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # Usa a última versão do Ubuntu como runner

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4  # Faz checkout do repositório

      - name: Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'  # Define a versão do Java 21

      - name: Configurar Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository  # Cache para dependências Maven
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Usa o hash do arquivo pom.xml para identificar mudanças
          restore-keys: ${{ runner.os }}-maven

      - name: Compilar o projeto com Maven
        run: mvn clean package -DskipTests  # Compila o projeto e ignora os testes

      - name: Fazer upload do arquivo JAR
        uses: actions/upload-artifact@v4  # Faz upload do JAR gerado
        with:
          name: app-artifact
          path: target/*.jar  # Caminho do JAR gerado pelo Maven

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Só executa o deploy após a conclusão do build

    steps:
      - name: Baixar artefato da etapa de build
        uses: actions/download-artifact@v4
        with:
          name: app-artifact  # Baixa o artefato gerado pelo build

      - name: Deploy para Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'BlogPeriferico'  # Nome do seu aplicativo no Azure
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}  # A chave de publicação que você configurou nos secrets do GitHub
          package: '*.jar'  # O pacote a ser deployado é o arquivo JAR gerado
